apiVersion: apps/v1
kind: Deployment
metadata:
    name: my-backend-deployment      # Задаем имя деплоймента
    labels:
       env: test
       author: Alexey-Medov
spec:
  replicas: 2                        # Задаем количество реплик пода. То есть сколько экзепляров данного пода должно быть создано.
  selector:
    matchLabels:
      appname: my-backend            # Говорим что деплоймент будет связан с теми подами, у которых указан такой же Label.
  template:
    metadata: 
      labels:
        appname: my-backend          # Задаем имя пода
    spec:
      containers:
        - name : nginx               # Задаем имя первого контейнера
          image: nginx:latest
          ports:
            - containerPort: 80
            - containerPort: 443
        - name : redis               # Задаем имя второго контейнера
          image: redis:6.2.5
          ports:
            - containerPort: 6379

---
# Создаем контроллер автоматического контроля количества реплик пода

apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: my-backend-autoscaling
spec: 
  scaleTargetRef:                          # Перечисляем информацию о том, каким деплойментом будет управлять сервис автоматического горизонтального масштабирования
    apiVersion: apps/v2beta1v1
    kind: Deployment
    name: my-backend-deployment
  minReplicas: 2                           # Минимальное количество реплик которое будет всегда работать
  maxReplicas: 5                           # Максимально допустимое количество реплик в случае наступления правила масшабирования
  metrics:
    - type: Resource
      resource:
          name: cpu
          targetAverageUtilization: 80     # Увеличиваем количество подов если нагрузка на CPU всех текущих подов превышает 80%
    - type: Resource
      resource:
          name: memory
          targetAverageUtilization: 85     # Увеличиваем количество подов если нагрузка на оперативную память всех текущих подов превышает 85%
