# Создаем деплоймент
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{.Values.deployment.metadata.name}}               # Задаем имя деплоймента (из файла values)
    labels:
       env: {{.Values.deployment.metadata.labels.env}}
       author: Alexey-Medov
spec:
  replicas: {{.Values.deployment.spec.replicas}}             # Задаем количество реплик пода. То есть сколько экзепляров данного пода должно быть создано.
  selector:
    matchLabels:
      appname: example-3-pod                                 # Говорим что деплоймент будет связан с теми подами, у которых указан такой же Label.
  template:
    metadata:
      labels:
        appname: example-3-pod                               # Задаем уникальный label
    spec:
      containers:
        - name : nginx                                       # Задаем имя контейнера
          image: nginx:latest                                # Указываем образ для запуска контейнера
          ports:
            - containerPort: 80

# Создаем Service с типом NodePort для нашего деплоймента
---
apiVersion: v1
kind: Service
metadata:
  name: service-for-example-3
  labels:
     author: Alexey-Medov
spec:
  type: NodePort
  selector:
    appname: example-3-pod           # Говорим что будем отправлять трафик на Pod'ы у которых есть данная метка (label)
  ports:
    - protocol   : TCP
      port       : 80                # Порт внутри-кластерного IP данного сервиса 
      nodePort   : 30000             # Порт который будет открыт на каждой ноде в кластере
      targetPort : 80                # Порт сервиса работающего внутри пода (для redis сервера например, это 6379)
